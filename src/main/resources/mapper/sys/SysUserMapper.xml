<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.sys.dao.SysUserDao">

    <resultMap type="com.db.sys.vo.SysUserDeptVo"
               id="sysUserDeptVo">
        <!--
           1)association 用于定义关联查询
           2)association 应用场景:many2one or one2one-->
        <association property="sysDept"
                     column="deptId"
                     select="com.db.sys.dao.SysDeptDao.findById">
        </association>
    </resultMap>

    <select id="findPageObjects"
            resultMap="sysUserDeptVo">
        select * from jtsys.sys_users
        <include refid="queryWhereId"/>
        order by createdTime desc
        limit #{startIndex},#{pageSize}
    </select>

    <select id="getRowCount" resultType="int">
        select count(*) from jtsys.sys_users
        <include refid="queryWhereId"/>
    </select>
    <!--保存 -->
    <!--selectKey  会将 SELECT LAST_INSERT_ID()的结果放入到传入的model的主键里面，
            1)keyProperty 对应的model中的主键的属性名，这里是 user 中的id，因为它跟数据库的主键对应(一般与set方法匹配)
           2) order AFTER 表示 SELECT LAST_INSERT_ID() 在insert执行之后执行,多用与自增主键，
                  BEFORE 表示 SELECT LAST_INSERT_ID() 在insert执行之前执行，这样的话就拿不到主键了，
                        这种适合那种主键不是自增的类型
            3)resultType 主键类型
             last_insert_id()为mysql内置的一个函数
                其作用是获取最后一个自增长的那个id值
                -->

    <insert id="insertObject" parameterType="com.db.sys.entity.SysUser">
        <selectKey keyProperty="id"
                   order="AFTER"
                   resultType="int">
            select last_insert_id()
        </selectKey>
        insert into jtsys.sys_users
        (username,password,deptId,email,mobile,salt,valid,
        createdTime,modifiedTime,createdUser,modifiedUser)
        values
        (#{username},#{password},#{deptId},#{email},#{mobile},#{salt},#{valid},
        now(),now(),#{createdUser},#{modifiedUser})
    </insert>

    <!--查询用户名是不是相同 -->
    <select id="findObjectName" parameterType="java.lang.String" resultType="java.lang.Boolean">
        select *
        from jtsys.sys_users
        where username = #{username}
    </select>
    <!--修改用户信息 -->
    <update id="updateObject" parameterType="com.db.sys.entity.SysUser">
        update jtsys.sys_users
        <set>
            <if test="username!=null and username!=''">
                username=#{username},
            </if>
            <if test="email!=null and email!=''">
                email=#{email},
            </if>
            <if test="mobile!=null and mobile!=''">
                mobile=#{mobile},
            </if>
            <if test="deptId!=null and deptId!=''">
                deptId=#{deptId},
            </if>
            <if test="modifiedUser!=null and modifiedUser!=''">
                modifiedUser=#{modifiedUser},
            </if>
            modifiedTime=now()
        </set>
        where id=#{id}
    </update>
    <!--根据id删除记录 -->
    <delete id="delectsObject" parameterType="int">
     delete  from jtsys.sys_users where id=#{id}
    </delete>
    <!-- 禁用，启用用户状态信息 -->
    <update id="validById">
        update jtsys.sys_users
        set valid=#{valid},
            modifiedUser=#{modifiedUser},
            modifiedTime=now()
        where id = #{id}
    </update>
    <!-- 基于用户id查询用户以及用户对应的部门信息 -->
    <select id="findObjectById" parameterType="int"
            resultMap="sysUserDeptVo">
        select *
        from jtsys.sys_users
        where id = #{id}
    </select>

    <sql id="queryWhereId">
        <where>
            <if test="username!=null and username!=''">
                username like concat("%",#{username},"%")
            </if>
        </where>
    </sql>

</mapper>








