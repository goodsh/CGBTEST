<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.sys.dao.SysMenuDao">

    <update id="updateObject"
            parameterType="com.db.sys.entity.SysMenu">
        update jtsys. sys_menus
        set
        name=#{name},<!-- 底层会调用对象get方法 -->
        type=#{type},
        sort=#{sort},
        url=#{url},
        parentId=#{parentId},
        permission=#{permission},
        note=#{note},
        modifiedUser=#{modifiedUser},
        modifiedTime=now()
        where id=#{id}
    </update>

    <insert id="insertMenuObject"
            parameterType="com.db.sys.entity.SysMenu">
        insert into jtsys. sys_menus
        (name,url,type,sort,note,parentId,permission,
         createdTime,modifiedTime,createdUser,modifiedUser)
        values
        (#{name},#{url},#{type},#{sort},#{note},#{parentId},#{permission},
         now(),now(),#{createdUser},#{modifiedUser})
    </insert>


    <select id="findZtreeMenuNodes"
            resultType="com.db.common.vo.Node">
        select id,name,parentId
        from jtsys. sys_menus
    </select>


    <!-- 基于菜单id统计子菜单个数 -->
    <select id="getChildCount" resultType="int">
        select count(*)
        from jtsys. sys_menus
        where parentId=#{id}
    </select>

    <!-- 基于id删除菜单元素 -->
    <delete id="deleteObject">
        delete from jtsys. sys_menus
        where id=#{id}
    </delete>

    <!-- 查询所有菜单以及上级菜单信息,每行记录都要映射
         为一个map对象 -->
    <select id="findObjects"
            resultType="map"><!-- 这里的map是Map集合的别名 -->
        <!-- 方案1 -->
        <!--
        select c.*,p.name parentName
        from sys_menus c left join sys_menus p
        on c.parentId=p.id
        -->
        <!-- 方案2 -->
        select c.*,(select p.name
        from jtsys. sys_menus p
        where c.parentId=p.id) parentName
        from jtsys. sys_menus c
    </select>

</mapper>








